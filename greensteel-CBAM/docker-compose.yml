name: greensteel

services:
  # API Gateway 서비스
  gateway:
    build: ./gateway
    container_name: greensteel-gateway
    ports:
      - "8080:8080"
    environment:
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL:-http://auth-service:8000}
      - CAL_BOUNDARY_URL=${CAL_BOUNDARY_URL:-http://cal-boundary:8001}
      - CORS_URL=${CORS_URL:-http://localhost:3000}
      - PORT=8080
    depends_on:
      - auth-service
      - cal-boundary
    networks:
      - greensteel-network
    restart: unless-stopped

  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: greensteel-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=cbam_db
      - POSTGRES_USER=cbam_user
      - POSTGRES_PASSWORD=cbam_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - greensteel-network
    restart: unless-stopped

  # 인증 서비스
  auth-service:
    build: ./service/auth-service
    container_name: greensteel-auth-service
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      # 로컬 개발용 PostgreSQL 설정
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=cbam_db
      - DB_USER=cbam_user
      - DB_PASSWORD=cbam_password
      # Railway 배포 시 내부 네트워크 사용
      - DATABASE_URL=${DATABASE_URL:-postgresql://cbam_user:cbam_password@postgres:5432/cbam_db}
    depends_on:
      - postgres
    networks:
      - greensteel-network
    restart: unless-stopped

  # Cal_boundary 서비스 (실제 폴더명에 맞춤)
  cal-boundary:
    build: ./service/Cal_boundary
    container_name: greensteel-cal-boundary
    ports:
      - "8001:8001"
    environment:
      - PORT=8001
      - DEBUG_MODE=true
      - DATABASE_URL=${DATABASE_URL:-postgresql://cbam_user:cbam_password@postgres:5432/cbam_db}
    depends_on:
      - postgres
    networks:
      - greensteel-network
    restart: unless-stopped

  # Frontend 서비스 (개발용)
  frontend:
    build: ./frontend
    container_name: greensteel-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8080/api/v1
      - NEXT_PUBLIC_CAL_BOUNDARY_URL=http://localhost:8001
      - NODE_ENV=development
    depends_on:
      - gateway
      - cal-boundary
    networks:
      - greensteel-network
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules

networks:
  greensteel-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  postgres_data:
    driver: local
