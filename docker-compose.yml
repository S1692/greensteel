version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: greensteel-postgres
    environment:
      POSTGRES_DB: greensteel
      POSTGRES_USER: greensteel
      POSTGRES_PASSWORD: greensteel123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./create_tables.js:/docker-entrypoint-initdb.d/create_tables.js
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U greensteel"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (캐싱 및 세션 저장용)
  redis:
    image: redis:7-alpine
    container_name: greensteel-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: greensteel-gateway
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://greensteel:greensteel123@postgres:5432/greensteel
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:8081
      - CBAM_SERVICE_URL=http://cbam-service:8082
      - LCA_SERVICE_URL=http://lca-service:8083
      - CHATBOT_SERVICE_URL=http://chatbot-service:8084
      - DATAGATHER_SERVICE_URL=http://datagather-service:8085
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./gateway:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Auth Service
  auth-service:
    build:
      context: ./service/auth_service
      dockerfile: Dockerfile
    container_name: greensteel-auth
    ports:
      - "8081:8081"
    environment:
      - DATABASE_URL=postgresql://greensteel:greensteel123@postgres:5432/greensteel
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=your-secret-key-here-change-in-production
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./service/auth_service:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # CBAM Service
  cbam-service:
    build:
      context: ./service/cbam_service
      dockerfile: Dockerfile
    container_name: greensteel-cbam
    ports:
      - "8082:8082"
    environment:
      - DATABASE_URL=postgresql://greensteel:greensteel123@postgres:5432/greensteel
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./service/cbam_service:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # LCA Service
  lca-service:
    build:
      context: ./service/lca_service
      dockerfile: Dockerfile
    container_name: greensteel-lca
    ports:
      - "8083:8083"
    environment:
      - DATABASE_URL=postgresql://greensteel:greensteel123@postgres:5432/greensteel
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./service/lca_service:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Chatbot Service
  chatbot-service:
    build:
      context: ./service/chatbot_service
      dockerfile: Dockerfile
    container_name: greensteel-chatbot
    ports:
      - "8084:8084"
    environment:
      - DATABASE_URL=postgresql://greensteel:greensteel123@postgres:5432/greensteel
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=your-openai-api-key-here
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./service/chatbot_service:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Data Gather Service
  datagather-service:
    build:
      context: ./service/datagather_service
      dockerfile: Dockerfile
    container_name: greensteel-datagather
    ports:
      - "8085:8085"
    environment:
      - DATABASE_URL=postgresql://greensteel:greensteel123@postgres:5432/greensteel
      - REDIS_URL=redis://redis:6379
      - RAIL_API_URL=http://rail-service:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./service/datagather_service:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/health"]
      interval: 30s
      timeout: 10s
      retries: 3




volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: greensteel-network

